{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ViewRessourceComponent = class ViewRessourceComponent {\n  constructor(rs, router) {\n    this.rs = rs;\n    this.router = router;\n    this.listRessource = [];\n  }\n  ngOnInit() {\n    this.loadRessources();\n  }\n  loadRessources() {\n    this.rs.getRessource().subscribe({\n      next: res => this.listRessource = res,\n      error: err => console.error('Erreur de récupération des ressources:', err)\n    });\n  }\n  deleteRessource(id) {\n    if (confirm(\"Voulez-vous vraiment supprimer cette ressource ?\")) {\n      this.rs.deleteRessource(id).subscribe({\n        next: () => {\n          this.listRessource = this.listRessource.filter(res => res.idRessource !== id);\n        },\n        error: err => console.error('Erreur lors de la suppression de la ressource:', err)\n      });\n    }\n  }\n  NavigateavecID(id) {\n    this.router.navigate(['/UpdateRessource']);\n  }\n};\nViewRessourceComponent = __decorate([Component({\n  selector: 'app-view-ressource',\n  templateUrl: './view-ressource.component.html',\n  styleUrls: ['./view-ressource.component.css']\n})], ViewRessourceComponent);","map":{"version":3,"names":["Component","ViewRessourceComponent","constructor","rs","router","listRessource","ngOnInit","loadRessources","getRessource","subscribe","next","res","error","err","console","deleteRessource","id","confirm","filter","idRessource","NavigateavecID","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\TEMP\\temp\\src\\app\\Views\\Ressource\\view-ressource\\view-ressource.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RessourceService } from '../../service/ressource.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-view-ressource',\n  templateUrl: './view-ressource.component.html',\n  styleUrls: ['./view-ressource.component.css']\n})\nexport class ViewRessourceComponent implements OnInit {\n  listRessource: { idRessource: number; nomRessource: string; nombreRessource: number; typesRessource: string }[] = [];\n\n  constructor(\n    private rs: RessourceService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loadRessources();\n    \n  }\n\n  loadRessources(): void {\n    this.rs.getRessource().subscribe({\n      next: (res) => this.listRessource = res,\n      error: (err) => console.error('Erreur de récupération des ressources:', err)\n    });\n  }\n\n  deleteRessource(id: number): void {\n    if (confirm(\"Voulez-vous vraiment supprimer cette ressource ?\")) {\n      this.rs.deleteRessource(id).subscribe({\n        next: () => {\n          this.listRessource = this.listRessource.filter(res => res.idRessource !== id);\n        },\n        error: (err) => console.error('Erreur lors de la suppression de la ressource:', err)\n      });\n    }\n  }\n  NavigateavecID(id: number): void {\n    this.router.navigate(['/UpdateRessource']);\n    \n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAGjCC,YACUC,EAAoB,EACpBC,MAAc;IADd,KAAAD,EAAE,GAAFA,EAAE;IACF,KAAAC,MAAM,GAANA,MAAM;IAJhB,KAAAC,aAAa,GAAqG,EAAE;EAKjH;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;EAEvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACJ,EAAE,CAACK,YAAY,EAAE,CAACC,SAAS,CAAC;MAC/BC,IAAI,EAAGC,GAAG,IAAK,IAAI,CAACN,aAAa,GAAGM,GAAG;MACvCC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,wCAAwC,EAAEC,GAAG;KAC5E,CAAC;EACJ;EAEAE,eAAeA,CAACC,EAAU;IACxB,IAAIC,OAAO,CAAC,kDAAkD,CAAC,EAAE;MAC/D,IAAI,CAACd,EAAE,CAACY,eAAe,CAACC,EAAE,CAAC,CAACP,SAAS,CAAC;QACpCC,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACL,aAAa,GAAG,IAAI,CAACA,aAAa,CAACa,MAAM,CAACP,GAAG,IAAIA,GAAG,CAACQ,WAAW,KAAKH,EAAE,CAAC;QAC/E,CAAC;QACDJ,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,gDAAgD,EAAEC,GAAG;OACpF,CAAC;;EAEN;EACAO,cAAcA,CAACJ,EAAU;IACvB,IAAI,CAACZ,MAAM,CAACiB,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC;EAE5C;CAED;AAnCYpB,sBAAsB,GAAAqB,UAAA,EALlCtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWxB,sBAAsB,CAmClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}