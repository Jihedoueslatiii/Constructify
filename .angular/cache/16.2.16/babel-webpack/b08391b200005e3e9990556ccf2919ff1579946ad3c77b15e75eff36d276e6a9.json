{"ast":null,"code":"import { Urls } from 'src/app/url/url';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RessourceService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = Urls.serverpath1;\n  }\n  getRessource() {\n    let url = this.apiUrl + 'getAllRessources';\n    return this.http.get(url); // Retourne un tableau d'objets\n  }\n\n  createRessource(Ressource) {\n    return this.http.post(this.apiUrl + 'add', Ressource);\n  }\n  deleteRessource(idRessource) {\n    return this.http.delete(`${this.apiUrl}delete/${idRessource}`);\n  }\n  updateRessource(idRessource, Ressource) {\n    return this.http.put(`${this.apiUrl}update/${idRessource}`, Ressource);\n  }\n  static {\n    this.ɵfac = function RessourceService_Factory(t) {\n      return new (t || RessourceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RessourceService,\n      factory: RessourceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Urls","RessourceService","constructor","http","apiUrl","serverpath1","getRessource","url","get","createRessource","Ressource","post","deleteRessource","idRessource","delete","updateRessource","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\TEMP\\temp\\src\\app\\Views\\service\\ressource.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Urls } from 'src/app/url/url';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RessourceService {\r\n\r\n  private apiUrl: string = Urls.serverpath1;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getRessource(): Observable<any[]> {\r\n    let url = this.apiUrl + 'getAllRessources';\r\n    return this.http.get<any[]>(url);  // Retourne un tableau d'objets\r\n  }\r\n\r\n  createRessource(Ressource: any): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl + 'add', Ressource);\r\n  }\r\n\r\n  deleteRessource(idRessource: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}delete/${idRessource}`);\r\n  }\r\n\r\n  updateRessource(idRessource: number, Ressource: any): Observable<any> {\r\n    return this.http.put<any>(`${this.apiUrl}update/${idRessource}`, Ressource);\r\n  }\r\n  \r\n}\r\n"],"mappings":"AAGA,SAASA,IAAI,QAAQ,iBAAiB;;;AAKtC,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAWJ,IAAI,CAACK,WAAW;EAEF;EAEvCC,YAAYA,CAAA;IACV,IAAIC,GAAG,GAAG,IAAI,CAACH,MAAM,GAAG,kBAAkB;IAC1C,OAAO,IAAI,CAACD,IAAI,CAACK,GAAG,CAAQD,GAAG,CAAC,CAAC,CAAE;EACrC;;EAEAE,eAAeA,CAACC,SAAc;IAC5B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,IAAI,CAACP,MAAM,GAAG,KAAK,EAAEM,SAAS,CAAC;EAC5D;EAEAE,eAAeA,CAACC,WAAmB;IACjC,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,MAAM,UAAUS,WAAW,EAAE,CAAC;EAChE;EAEAE,eAAeA,CAACF,WAAmB,EAAEH,SAAc;IACjD,OAAO,IAAI,CAACP,IAAI,CAACa,GAAG,CAAM,GAAG,IAAI,CAACZ,MAAM,UAAUS,WAAW,EAAE,EAAEH,SAAS,CAAC;EAC7E;;;uBArBWT,gBAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAhBnB,gBAAgB;MAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}